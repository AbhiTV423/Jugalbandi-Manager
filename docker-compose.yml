version: '3'
services:
  api:
    build: 
      context: .
      dockerfile: ./api/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_DATABASE_NAME=${POSTGRES_DATABASE_NAME}
      - POSTGRES_DATABASE_USERNAME=${POSTGRES_DATABASE_USERNAME}
      - POSTGRES_DATABASE_PASSWORD=${POSTGRES_DATABASE_PASSWORD}
      - POSTGRES_DATABASE_HOST=${POSTGRES_DATABASE_HOST}
      - POSTGRES_DATABASE_PORT=${POSTGRES_DATABASE_PORT}
      - KAFKA_BROKER=${KAFKA_BROKER}
      - KAFKA_USE_SASL=${KAFKA_USE_SASL}
      - KAFKA_PRODUCER_USERNAME=${KAFKA_PRODUCER_USERNAME}
      - KAFKA_PRODUCER_PASSWORD=${KAFKA_PRODUCER_PASSWORD}       
      - KAFKA_CHANNEL_TOPIC=${KAFKA_CHANNEL_TOPIC}
      - KAFKA_FLOW_TOPIC=${KAFKA_FLOW_TOPIC}
      - STORAGE_ACCOUNT_URL=${STORAGE_ACCOUNT_URL}
      - STORAGE_ACCOUNT_KEY=${STORAGE_ACCOUNT_KEY}
      - STORAGE_LAWFILES_CONTAINER=${STORAGE_LAWFILES_CONTAINER}
      - STORAGE_AUDIOFILES_CONTAINER=${STORAGE_AUDIOFILES_CONTAINER}
      - WA_API_HOST=${WA_API_HOST}
      - WABA_NUMBER=${WABA_NUMBER}
      - WA_API_KEY=${WA_API_KEY}
      - FERNET_KEY=${FERNET_KEY}
    depends_on:
      - kafka
      - postgres
  kafka:
      image: docker.io/bitnami/kafka:3.6
      ports:
        - "9092:19092"
      volumes:
        - "kafka_data:/bitnami"
      environment:        
        - KAFKA_CFG_NODE_ID=0
        - KAFKA_CFG_PROCESS_ROLES=controller,broker
        - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
        # Listeners
        - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:19092
        - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://${JBHOST}:9092
        - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
        - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
        - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
  language:
    build:
      context: .  # Root directory of the project      
      dockerfile: ./language/Dockerfile
    environment:
      - POSTGRES_DATABASE_NAME=${POSTGRES_DATABASE_NAME}
      - POSTGRES_DATABASE_USERNAME=${POSTGRES_DATABASE_USERNAME}
      - POSTGRES_DATABASE_PASSWORD=${POSTGRES_DATABASE_PASSWORD}
      - POSTGRES_DATABASE_HOST=${POSTGRES_DATABASE_HOST}
      - POSTGRES_DATABASE_PORT=${POSTGRES_DATABASE_PORT}
      - KAFKA_BROKER=${KAFKA_BROKER}
      - KAFKA_USE_SASL=${KAFKA_USE_SASL}
      - KAFKA_PRODUCER_USERNAME=${KAFKA_PRODUCER_USERNAME}
      - KAFKA_PRODUCER_PASSWORD=${KAFKA_PRODUCER_PASSWORD}
      - KAFKA_FLOW_TOPIC=${KAFKA_FLOW_TOPIC}
      - KAFKA_CHANNEL_TOPIC=${KAFKA_CHANNEL_TOPIC}
      - KAFKA_LANGUAGE_TOPIC=${KAFKA_LANGUAGE_TOPIC}
      - KAFKA_CONSUMER_USERNAME=${KAFKA_CONSUMER_USERNAME}
      - KAFKA_CONSUMER_PASSWORD=${KAFKA_CONSUMER_PASSWORD}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_API_TYPE=${OPENAI_API_TYPE}
      - BHASHINI_USER_ID=${BHASHINI_USER_ID} 
      - BHASHINI_API_KEY=${BHASHINI_API_KEY}
      - BHASHINI_PIPELINE_ID=${BHASHINI_PIPELINE_ID}
      - AZURE_SPEECH_KEY=${AZURE_SPEECH_KEY}
      - AZURE_SPEECH_REGION=${AZURE_SPEECH_REGION}
      - AZURE_TRANSLATION_KEY=${AZURE_TRANSLATION_KEY}
      - AZURE_TRANSLATION_RESOURCE_LOCATION=${AZURE_TRANSLATION_RESOURCE_LOCATION}
      - STORAGE_ACCOUNT_URL=${STORAGE_ACCOUNT_URL}
      - STORAGE_ACCOUNT_KEY=${STORAGE_ACCOUNT_KEY}
      - STORAGE_AUDIOFILES_CONTAINER=${STORAGE_AUDIOFILES_CONTAINER}
    depends_on:
        - kafka
        - postgres
  flow:
    build:
      context: .  # Root directory of the project      
      dockerfile: ./flow/Dockerfile
    environment:
      - POSTGRES_DATABASE_NAME=${POSTGRES_DATABASE_NAME}
      - POSTGRES_DATABASE_USERNAME=${POSTGRES_DATABASE_USERNAME}
      - POSTGRES_DATABASE_PASSWORD=${POSTGRES_DATABASE_PASSWORD}
      - POSTGRES_DATABASE_HOST=${POSTGRES_DATABASE_HOST}
      - POSTGRES_DATABASE_PORT=${POSTGRES_DATABASE_PORT}
      - KAFKA_BROKER=${KAFKA_BROKER}
      - KAFKA_USE_SASL=${KAFKA_USE_SASL}
      - KAFKA_PRODUCER_USERNAME=${KAFKA_PRODUCER_USERNAME}
      - KAFKA_PRODUCER_PASSWORD=${KAFKA_PRODUCER_PASSWORD}
      - KAFKA_FLOW_TOPIC=${KAFKA_FLOW_TOPIC}
      - KAFKA_CHANNEL_TOPIC=${KAFKA_CHANNEL_TOPIC}
      - KAFKA_RAG_TOPIC=${KAFKA_RAG_TOPIC}
      - KAFKA_LANGUAGE_TOPIC=${KAFKA_LANGUAGE_TOPIC}
      - KAFKA_CONSUMER_USERNAME=${KAFKA_CONSUMER_USERNAME}
      - KAFKA_CONSUMER_PASSWORD=${KAFKA_CONSUMER_PASSWORD}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_API_TYPE=${OPENAI_API_TYPE}
      - STORAGE_ACCOUNT_URL=${STORAGE_ACCOUNT_URL}
      - STORAGE_ACCOUNT_KEY=${STORAGE_ACCOUNT_KEY}
      - STORAGE_LAWFILES_CONTAINER=${STORAGE_LAWFILES_CONTAINER}
      - STORAGE_AUDIOFILES_CONTAINER=${STORAGE_AUDIOFILES_CONTAINER}
      - FERNET_KEY=${FERNET_KEY}
    depends_on:
        - kafka
        - postgres
  indexer:
    build:
      context: .  # Root directory of the project      
      dockerfile: ./indexer/Dockerfile
    environment:
      - KAFKA_BROKER=${KAFKA_BROKER}
      - KAFKA_USE_SASL=${KAFKA_USE_SASL}
      - KAFKA_CONSUMER_TOPIC=indexer
      - KAFKA_PRODUCER_FLOW_TOPIC=flow
      - POSTGRES_DATABASE_NAME=${POSTGRES_DATABASE_NAME}
      - POSTGRES_DATABASE_USERNAME=${POSTGRES_DATABASE_USERNAME}
      - POSTGRES_DATABASE_PASSWORD=${POSTGRES_DATABASE_PASSWORD}
      - POSTGRES_DATABASE_HOST=${POSTGRES_DATABASE_HOST}
      - POSTGRES_DATABASE_PORT=${POSTGRES_DATABASE_PORT}
      - OPENAI_API_TYPE=non
      - OPENAI_EMBEDDINGS_DEPLOYMENT=ahsj
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DOCUMENT_LOCAL_STORAGE_PATH=./data
    depends_on:
      - kafka
      - postgres
  retriever:
    build:
      context: .  # Root directory of the project      
      dockerfile: ./retriever/Dockerfile
    environment:
      - KAFKA_BROKER=${KAFKA_BROKER} 
      - KAFKA_USE_SASL=${KAFKA_USE_SASL}
      - KAFKA_RAG_TOPIC=${KAFKA_RAG_TOPIC}
      - KAFKA_FLOW_TOPIC=${KAFKA_FLOW_TOPIC}      
      - KAFKA_PRODUCER_USERNAME=${KAFKA_PRODUCER_USERNAME}
      - KAFKA_PRODUCER_PASSWORD=${KAFKA_PRODUCER_PASSWORD}
      - KAFKA_CONSUMER_USERNAME=${KAFKA_CONSUMER_USERNAME}
      - KAFKA_CONSUMER_PASSWORD=${KAFKA_CONSUMER_PASSWORD}
      - POSTGRES_DATABASE_NAME=${POSTGRES_DATABASE_NAME}
      - POSTGRES_DATABASE_USERNAME=${POSTGRES_DATABASE_USERNAME}
      - POSTGRES_DATABASE_PASSWORD=${POSTGRES_DATABASE_PASSWORD}
      - POSTGRES_DATABASE_HOST=${POSTGRES_DATABASE_HOST}
      - POSTGRES_DATABASE_PORT=${POSTGRES_DATABASE_PORT}
      - OPENAI_API_TYPE=${OPENAI_API_TYPE}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_EMBEDDINGS_DEPLOYMENT=${OPENAI_EMBEDDINGS_DEPLOYMENT}
      - DOCUMENT_LOCAL_STORAGE_PATH=${DOCUMENT_LOCAL_STORAGE_PATH}
    depends_on:
      - kafka
      - postgres
  channel:
    build:
      context: .  # Root directory of the project      
      dockerfile: ./channel/Dockerfile
    environment:
      - POSTGRES_DATABASE_NAME=${POSTGRES_DATABASE_NAME}
      - POSTGRES_DATABASE_USERNAME=${POSTGRES_DATABASE_USERNAME}
      - POSTGRES_DATABASE_PASSWORD=${POSTGRES_DATABASE_PASSWORD}
      - POSTGRES_DATABASE_HOST=${POSTGRES_DATABASE_HOST}
      - POSTGRES_DATABASE_PORT=${POSTGRES_DATABASE_PORT}
      - KAFKA_BROKER=${KAFKA_BROKER}
      - KAFKA_USE_SASL=${KAFKA_USE_SASL}
      - KAFKA_PRODUCER_USERNAME=${KAFKA_PRODUCER_USERNAME}
      - KAFKA_PRODUCER_PASSWORD=${KAFKA_PRODUCER_PASSWORD} 
      - KAFKA_LANGUAGE_TOPIC=${KAFKA_LANGUAGE_TOPIC}
      - KAFKA_FLOW_TOPIC=${KAFKA_FLOW_TOPIC}
      - KAFKA_CHANNEL_TOPIC=${KAFKA_CHANNEL_TOPIC}
      - KAFKA_CONSUMER_USERNAME=${KAFKA_CONSUMER_USERNAME}
      - KAFKA_CONSUMER_PASSWORD=${KAFKA_CONSUMER_PASSWORD}
      - STORAGE_ACCOUNT_URL=${STORAGE_ACCOUNT_URL}
      - STORAGE_ACCOUNT_KEY=${STORAGE_ACCOUNT_KEY}
      - STORAGE_LAWFILES_CONTAINER=${STORAGE_LAWFILES_CONTAINER}
      - STORAGE_AUDIOFILES_CONTAINER=${STORAGE_AUDIOFILES_CONTAINER}
      - WA_API_HOST=${WA_API_HOST}
      - WABA_NUMBER=${WABA_NUMBER}
      - WA_API_KEY=${WA_API_KEY}
      - FERNET_KEY=${FERNET_KEY}
    depends_on:
        - kafka
        - postgres
  frontend:
    build:
      context: .  # Root directory of the project      
      dockerfile: ./frontend/Dockerfile
    ports:
      - "4173:4173"
    environment:
      - VITE_SERVER_HOST=${SERVER_HOST}
    # depends_on:
    #   - api

  postgres:
    image: ankane/pgvector
    ports:
      - "5432:5432"
    environment:
    #   POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    #   POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
  postgres-adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
  metabase:
    image: metabase/metabase:latest
    ports:
      - "3000:3000"
  
volumes:
  kafka_data:
    driver: local
  postgres_data:
    driver: local
